import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.93aafbf2.js";const d=JSON.parse('{"title":"系统日志","description":"","frontmatter":{},"headers":[],"relativePath":"back/common/logger.md","filePath":"back/common/logger.md"}'),p={name:"back/common/logger.md"},o=l(`<h1 id="系统日志" tabindex="-1">系统日志 <a class="header-anchor" href="#系统日志" aria-label="Permalink to &quot;系统日志&quot;">​</a></h1><h2 id="外部日志" tabindex="-1">外部日志 <a class="header-anchor" href="#外部日志" aria-label="Permalink to &quot;外部日志&quot;">​</a></h2><p>在实际开发中，我们通常需要把日志(错误日志、手动打印日志) 存储到本地文件中，以便我们在生产环境便于排查错误。内部使用 <a href="https://github.com/winstonjs/winston" target="_blank" rel="noreferrer">Winston</a> 完全 <a href="https://docs.nestjs.com/techniques/logger" target="_blank" rel="noreferrer">自定义日志</a> 来替换内部的记录器。</p><p>在应用中一个好的实践是实例化 <code>Logger</code> 类，这将与具体的实现无关。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Injectable, Logger } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/common&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">Injectable</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AppService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">logger</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Logger</span><span style="color:#E1E4E8;">(AppService.name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getHello</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.logger.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;logger log&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.logger.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;logger warn&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.logger.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;logger error&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Injectable, Logger } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/common&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">Injectable</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AppService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#E36209;">logger</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Logger</span><span style="color:#24292E;">(AppService.name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">getHello</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.logger.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;logger log&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.logger.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;logger warn&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.logger.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;logger error&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>以上调用将在控制台和本地文件中输出以下内容。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># vivy-modules/vivy-system/logs/vivy-system-2023-09-01.log</span></span>
<span class="line"><span style="color:#E1E4E8;">[vivy-system] Info      2023/9/1 14:09:58 [AppService] logger log - {} +1m</span></span>
<span class="line"><span style="color:#E1E4E8;">[vivy-system] Warn      2023/9/1 14:09:58 [AppService] logger warn - {} +1ms</span></span>
<span class="line"><span style="color:#E1E4E8;">[vivy-system] Error     2023/9/1 14:09:58 [AppService] logger error - { </span><span style="color:#B392F0;">stack:</span><span style="color:#E1E4E8;"> [ </span><span style="color:#9ECBFF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+1ms</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># vivy-modules/vivy-system/logs/vivy-system-2023-09-01.log</span></span>
<span class="line"><span style="color:#24292E;">[vivy-system] Info      2023/9/1 14:09:58 [AppService] logger log - {} +1m</span></span>
<span class="line"><span style="color:#24292E;">[vivy-system] Warn      2023/9/1 14:09:58 [AppService] logger warn - {} +1ms</span></span>
<span class="line"><span style="color:#24292E;">[vivy-system] Error     2023/9/1 14:09:58 [AppService] logger error - { </span><span style="color:#6F42C1;">stack:</span><span style="color:#24292E;"> [ </span><span style="color:#032F62;">null</span><span style="color:#24292E;"> </span><span style="color:#032F62;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+1ms</span></span></code></pre></div><h2 id="操作日志" tabindex="-1">操作日志 <a class="header-anchor" href="#操作日志" aria-label="Permalink to &quot;操作日志&quot;">​</a></h2><p>在实际开发中，对于某些关键业务，我们通常需要记录该操作的内容，一个操作调一次记录方法，每次还得去收集参数等等，会造成大量代码重复。我们希望代码中只有业务相关的操作，在项目中使用装饰器来完成此项功能。</p><p>在需要被记录日志的请求方法上添加 <code>@Log</code> 装饰器，使用方法如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Log, OperType } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@vivy-common/logger&#39;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UserController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">Post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;add&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">Log</span><span style="color:#E1E4E8;">({ title: </span><span style="color:#9ECBFF;">&#39;用户管理&#39;</span><span style="color:#E1E4E8;">, operType: OperType.</span><span style="color:#79B8FF;">INSERT</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">AjaxResult</span><span style="color:#E1E4E8;">&gt; {}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Log, OperType } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@vivy-common/logger&#39;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">Post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;add&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line highlighted"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">Log</span><span style="color:#24292E;">({ title: </span><span style="color:#032F62;">&#39;用户管理&#39;</span><span style="color:#24292E;">, operType: OperType.</span><span style="color:#005CC5;">INSERT</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">AjaxResult</span><span style="color:#24292E;">&gt; {}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="装饰器参数" tabindex="-1">装饰器参数 <a class="header-anchor" href="#装饰器参数" aria-label="Permalink to &quot;装饰器参数&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LogOptions</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 日志标题</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">title</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 操作类型</span></span>
<span class="line"><span style="color:#6A737D;">   * OTHER 其它, SELECT 查询, INSERT 新增, UPDATE 修改, DELETE 删除,</span></span>
<span class="line"><span style="color:#6A737D;">   * GRANT 授权, EXPORT 导出, IMPORT 导入, FORCE 强退, GENCODE 生成代码, CLEAN 清空数据</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">operType</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OperType</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> OperType.</span><span style="color:#79B8FF;">OTHER</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 是否保存请求的参数</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">isSaveRequestData</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 是否保存响应的参数</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">isSaveResponseData</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LogOptions</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 日志标题</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">title</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 操作类型</span></span>
<span class="line"><span style="color:#6A737D;">   * OTHER 其它, SELECT 查询, INSERT 新增, UPDATE 修改, DELETE 删除,</span></span>
<span class="line"><span style="color:#6A737D;">   * GRANT 授权, EXPORT 导出, IMPORT 导入, FORCE 强退, GENCODE 生成代码, CLEAN 清空数据</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">operType</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OperType</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> OperType.</span><span style="color:#005CC5;">OTHER</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 是否保存请求的参数</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">isSaveRequestData</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 是否保存响应的参数</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">isSaveResponseData</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="自定义操作类型" tabindex="-1">自定义操作类型 <a class="header-anchor" href="#自定义操作类型" aria-label="Permalink to &quot;自定义操作类型&quot;">​</a></h3><ol><li>在 <code>OperType</code> 中新增业务操作类型。</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OperType</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 测试</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">TEST</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OperType</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 测试</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#005CC5;">TEST</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol start="2"><li>在 <code>sys_dict_data</code> 字典数据表中添加操作类型。</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`sys_dict_data\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">21</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;sys_oper_type&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;测试&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;11&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;admin&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">sysdate</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&#39;admin&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">sysdate</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`sys_dict_data\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">21</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;sys_oper_type&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;测试&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;11&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;admin&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">sysdate</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&#39;admin&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">sysdate</span><span style="color:#24292E;">());</span></span></code></pre></div><ol start="3"><li>在 <code>Controller</code> 中使用注解。</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Log, OperType } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@vivy-common/logger&#39;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">Log</span><span style="color:#E1E4E8;">({ title: </span><span style="color:#9ECBFF;">&#39;测试标题&#39;</span><span style="color:#E1E4E8;">, operType: OperType.</span><span style="color:#79B8FF;">TEST</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">AjaxResult</span><span style="color:#E1E4E8;">&gt; {}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Log, OperType } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@vivy-common/logger&#39;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestController</span><span style="color:#24292E;"> {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">Log</span><span style="color:#24292E;">({ title: </span><span style="color:#032F62;">&#39;测试标题&#39;</span><span style="color:#24292E;">, operType: OperType.</span><span style="color:#005CC5;">TEST</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">AjaxResult</span><span style="color:#24292E;">&gt; {}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="相关源码" tabindex="-1">相关源码 <a class="header-anchor" href="#相关源码" aria-label="Permalink to &quot;相关源码&quot;">​</a></h2><ul><li><p><a href="https://github.com/haiweilian/vivy-nest-admin/tree/main/vivy-common/vivy-common-logger" target="_blank" rel="noreferrer">https://github.com/haiweilian/vivy-nest-admin/tree/main/vivy-common/vivy-common-logger</a></p></li><li><p><a href="https://github.com/haiweilian/vivy-nest-admin/blob/main/vivy-modules/vivy-system/src/main.ts" target="_blank" rel="noreferrer">https://github.com/haiweilian/vivy-nest-admin/blob/main/vivy-modules/vivy-system/src/main.ts</a></p></li><li><p><a href="https://github.com/haiweilian/vivy-nest-admin/blob/main/vivy-modules/vivy-system/src/app.module.ts" target="_blank" rel="noreferrer">https://github.com/haiweilian/vivy-nest-admin/blob/main/vivy-modules/vivy-system/src/app.module.ts</a></p></li><li><p><a href="https://github.com/haiweilian/vivy-nest-admin/blob/main/vivy-modules/vivy-system/src/common/interceptors/log.interceptor.ts" target="_blank" rel="noreferrer">https://github.com/haiweilian/vivy-nest-admin/blob/main/vivy-modules/vivy-system/src/common/interceptors/log.interceptor.ts</a></p></li></ul>`,22),e=[o];function t(c,r,y,E,i,g){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{d as __pageData,h as default};
